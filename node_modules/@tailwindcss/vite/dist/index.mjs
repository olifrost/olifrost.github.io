var D=(r,e)=>(e=Symbol[r])?e:Symbol.for("Symbol."+r),P=r=>{throw TypeError(r)};var b=(r,e,i)=>{if(e!=null){typeof e!="object"&&typeof e!="function"&&P("Object expected");var t,o;i&&(t=e[D("asyncDispose")]),t===void 0&&(t=e[D("dispose")],i&&(o=t)),typeof t!="function"&&P("Object not disposable"),o&&(t=function(){try{o.call(this)}catch(a){return Promise.reject(a)}}),r.push([i,t,e])}else i&&r.push([i]);return e},y=(r,e,i)=>{var t=typeof SuppressedError=="function"?SuppressedError:function(n,d,c,s){return s=Error(c),s.name="SuppressedError",s.error=n,s.suppressed=d,s},o=n=>e=i?new t(n,e,"An error was suppressed during disposal"):(i=!0,n),a=n=>{for(;n=r.pop();)try{var d=n[1]&&n[1].call(n[2]);if(n[0])return Promise.resolve(d).then(a,c=>(o(c),a()))}catch(c){o(c)}if(i)throw e};return a()};import{compile as _,env as U,Features as g,Instrumentation as B,normalizePath as x}from"@tailwindcss/node";import{clearRequireCache as V}from"@tailwindcss/node/require-cache";import{Scanner as A}from"@tailwindcss/oxide";import{Features as S,transform as G}from"lightningcss";import w from"node:fs/promises";import p from"node:path";var f=U.DEBUG,J=/[?&](?:worker|sharedworker|raw|url)\b/,L=/\?commonjs-proxy/,z=/[?&]index\=\d+\.css$/;function K(){let r=[],e=null,i=!1,t=!1,o=new R(a=>{let n=e.createResolver({...e.resolve,extensions:[".css"],mainFields:["style"],conditions:["style","development|production"],tryIndex:!1,preferRelative:!0});function d(l,u){return n(l,u,!0,i)}let c=e.createResolver(e.resolve);function s(l,u){return c(l,u,!0,i)}return new C(a,e.root,d,s)});return[{name:"@tailwindcss/vite:scan",enforce:"pre",configureServer(a){r.push(a)},async configResolved(a){e=a,t=e.build.cssMinify!==!1,i=e.build.ssr!==!1&&e.build.ssr!==void 0}},{name:"@tailwindcss/vite:generate:serve",apply:"serve",enforce:"pre",async transform(a,n,d){var u=[];try{if(!E(n))return;let c=b(u,new B);f&&c.start("[@tailwindcss/vite] Generate CSS (serve)");let s=o.get(n);let l=await s.generate(a,M=>this.addWatchFile(M),c);if(!l)return o.delete(n),a;f&&c.end("[@tailwindcss/vite] Generate CSS (serve)");return{code:l}}catch(m){var h=m,v=!0}finally{y(u,h,v)}}},{name:"@tailwindcss/vite:generate:build",apply:"build",enforce:"pre",async transform(a,n){var l=[];try{if(!E(n))return;let d=b(l,new B);f&&d.start("[@tailwindcss/vite] Generate CSS (build)");let c=o.get(n);let s=await c.generate(a,v=>this.addWatchFile(v),d);if(!s)return o.delete(n),a;f&&d.end("[@tailwindcss/vite] Generate CSS (build)");f&&d.start("[@tailwindcss/vite] Optimize CSS");s=T(s,{minify:t});f&&d.end("[@tailwindcss/vite] Optimize CSS");return{code:s}}catch(u){var m=u,h=!0}finally{y(l,m,h)}}}]}function O(r){let[e]=r.split("?",2);return p.extname(e).slice(1)}function E(r){return r.includes("/.vite/")?void 0:(O(r)==="css"||r.includes("&lang.css")||r.match(z))&&!J.test(r)&&!L.test(r)}function T(r,{file:e="input.css",minify:i=!1}={}){function t(o){return G({filename:e,code:o,minify:i,sourceMap:!1,drafts:{customMedia:!0},nonStandard:{deepSelectorCombinator:!0},include:S.Nesting,exclude:S.LogicalProperties|S.DirSelector|S.LightDark,targets:{safari:16<<16|1024,ios_saf:16<<16|1024,firefox:8388608,chrome:7274496},errorRecovery:!0}).code}return t(t(Buffer.from(r))).toString()}function F(r){return p.resolve(r.replace(/\?.*$/,""))}var R=class extends Map{constructor(i){super();this.factory=i}get(i){let t=super.get(i);return t===void 0&&(t=this.factory(i,this),this.set(i,t)),t}},C=class{constructor(e,i,t,o){this.id=e;this.base=i;this.customCssResolver=t;this.customJsResolver=o}compiler;scanner;candidates=new Set;buildDependencies=new Map;async generate(e,i,t){function o(s){/[\#\?].*\.svg$/.test(s)||i(s)}let a=this.requiresBuild(),n=F(this.id),d=p.dirname(p.resolve(n));if(!this.compiler||!this.scanner||await a){V(Array.from(this.buildDependencies.keys())),this.buildDependencies.clear(),this.addBuildDependency(F(n)),f&&t.start("Setup compiler");let s=[];this.compiler=await _(e,{base:d,shouldRewriteUrls:!0,onDependency:u=>{o(u),s.push(this.addBuildDependency(u))},customCssResolver:this.customCssResolver,customJsResolver:this.customJsResolver}),await Promise.all(s),f&&t.end("Setup compiler"),f&&t.start("Setup scanner");let l=(this.compiler.root==="none"?[]:this.compiler.root===null?[{base:this.base,pattern:"**/*"}]:[this.compiler.root]).concat(this.compiler.globs);this.scanner=new A({sources:l}),f&&t.end("Setup scanner")}if(!(this.compiler.features&(g.AtApply|g.JsPluginCompat|g.ThemeFunction|g.Utilities)))return!1;if(this.compiler.features&g.Utilities){f&&t.start("Scan for candidates");for(let s of this.scanner.scan())this.candidates.add(s);f&&t.end("Scan for candidates")}if(this.compiler.features&g.Utilities){for(let s of this.scanner.files)o(s);for(let s of this.scanner.globs){if(s.pattern[0]==="!")continue;let l=p.relative(this.base,s.base);l[0]!=="."&&(l="./"+l),l=x(l),o(p.posix.join(l,s.pattern));let u=this.compiler.root;if(u!=="none"&&u!==null){let m=x(p.resolve(u.base,u.pattern));if(!await w.stat(m).then(v=>v.isDirectory(),()=>!1))throw new Error(`The path given to \`source(\u2026)\` must be a directory but got \`source(${m})\` instead.`)}}}f&&t.start("Build CSS");let c=this.compiler.build([...this.candidates]);return f&&t.end("Build CSS"),c}async addBuildDependency(e){let i=null;try{i=(await w.stat(e)).mtimeMs}catch{}this.buildDependencies.set(e,i)}async requiresBuild(){for(let[e,i]of this.buildDependencies){if(i===null)return!0;try{if((await w.stat(e)).mtimeMs>i)return!0}catch{return!0}}return!1}};export{K as default};
