---
// BioBuilder.astro - Interactive bio building component with Alpine.js
---

<div 
    class="max-w-none mx-auto" 
    x-data="bioBuilder()"
    x-init="init()"
>
    <!-- Photo section - now at top -->
    <div class="mb-6">
        <!-- Photo carousel -->
        <div class="relative">
            <div class="overflow-hidden rounded-lg">
                <div 
                    class="flex transition-transform duration-300 ease-in-out h-[500px]" 
                    :style="`transform: translateX(-${currentSlide * 100}%)`"
                >
                    <template x-for="(photo, index) in photos" :key="index">
                        <img 
                            :src="photo.src" 
                            :alt="photo.alt" 
                            class="w-full flex-shrink-0 h-full object-cover not-prose"
                        >
                    </template>
                </div>
            </div>
            
            <!-- Carousel controls -->
            <div class="flex justify-center mt-4 space-x-2">
                <template x-for="(photo, index) in photos" :key="index">
                    <button 
                        @click="setSlide(index)"
                        @keydown.enter="setSlide(index)"
                        @keydown.space.prevent="setSlide(index)"
                        :class="currentSlide === index ? 'bg-blue-600' : 'bg-gray-300'"
                        :aria-label="`Photo ${index + 1}`"
                        class="carousel-dot w-3 h-3 rounded-full transition-all duration-200 ease-in-out cursor-pointer hover:scale-110"
                        tabindex="0"
                        role="button"
                    ></button>
                </template>
            </div>
        </div>
    </div>

    <!-- Heading and instructions -->
    <div class="mb-4">
        <h2 class="text-4xl font-bold mb-2 not-prose">Build a Bio</h2>
        <p class="text-gray-600 text-sm">Tap the <span class="text-blue-600">blue text</span> to edit</p>
    </div>

    <!-- Bio output section -->
    <div class="mb-6">
        <div class="prose prose-lg max-w-none leading-relaxed space-y-4 text-gray-900">
            <p>
                Oli Frost <span 
                    class="bio-variable" 
                    @click.stop="showOptions('intro', $event)"
                    x-text="bioData.intro"
                ></span>. 
                He <span 
                    class="bio-variable" 
                    @click.stop="showOptions('achievement1', $event)"
                    x-text="bioData.achievement1"
                ></span>, <span 
                    class="bio-variable" 
                    @click.stop="showOptions('achievement2', $event)"
                    x-text="bioData.achievement2"
                ></span>, and <span 
                    class="bio-variable" 
                    @click.stop="showOptions('achievement3', $event)"
                    x-text="bioData.achievement3"
                ></span>.
            </p>
            
            <p>
                His work has been featured everywhere from <span 
                    class="bio-variable" 
                    @click.stop="showOptions('outlet1', $event)"
                    x-text="bioData.outlet1"
                ></span> to <span 
                    class="bio-variable" 
                    @click.stop="showOptions('outlet2', $event)"
                    x-text="bioData.outlet2"
                ></span>, <span 
                    class="bio-variable" 
                    @click.stop="showOptions('outlet3', $event)"
                    x-text="bioData.outlet3"
                ></span> to <span 
                    class="bio-variable" 
                    @click.stop="showOptions('outlet4', $event)"
                    x-text="bioData.outlet4"
                ></span>, in <span 
                    class="bio-variable" 
                    @click.stop="showOptions('outlet5', $event)"
                    x-text="bioData.outlet5"
                ></span>, <span 
                    class="bio-variable" 
                    @click.stop="showOptions('outlet6', $event)"
                    x-text="bioData.outlet6"
                ></span>, and <span 
                    class="bio-variable" 
                    @click.stop="showOptions('outlet7', $event)"
                    x-text="bioData.outlet7"
                ></span>.
            </p>
            
            <p>
                It's given him <span 
                    class="bio-variable" 
                    @click.stop="showOptions('stats1', $event)"
                    x-text="bioData.stats1"
                ></span>, and <span 
                    class="bio-variable" 
                    @click.stop="showOptions('stats2', $event)"
                    x-text="bioData.stats2"
                ></span>.
            </p>

            <p>
                At the moment he is <span 
                    class="bio-variable" 
                    @click.stop="showOptions('collaboration1', $event)"
                    x-text="bioData.collaboration1"
                ></span>, and <span 
                    class="bio-variable" 
                    @click.stop="showOptions('collaboration2', $event)"
                    x-text="bioData.collaboration2"
                ></span>.
            </p>
        </div>

        <!-- Controls - now below bio, aligned left -->
        <div class="flex gap-3 mt-6">
            <a 
                :href="photos[currentSlide].src" 
                :download="photos[currentSlide].filename"
                class="px-6 py-2 bg-white border border-gray-300 text-gray-700 rounded hover:bg-gray-50 transition-colors text-sm"
            >
                Download Photo
            </a>
            <button 
                @click="copyBio()"
                :class="copyButtonClass"
                class="px-6 py-2 rounded transition-colors text-sm"
                x-text="copyButtonText"
            ></button>
            <button 
                @click="resetBio()"
                class="px-6 py-2 hover:bg-gray-50 transition-colors text-sm"
            >
                Reset
            </button>
        </div>
    </div>

    <!-- Options panel (appears when clicking variables) -->
    <div 
        x-show="showOptionsPanel"
        x-transition:enter="transition ease-out duration-200"
        x-transition:enter-start="opacity-0 transform scale-95"
        x-transition:enter-end="opacity-100 transform scale-100"
        x-transition:leave="transition ease-in duration-150"
        x-transition:leave-start="opacity-100 transform scale-100"
        x-transition:leave-end="opacity-0 transform scale-95"
        :style="`position: fixed; left: ${panelPosition.x}px; top: ${panelPosition.y}px; z-index: 1000;`"
        @click.away="showOptionsPanel = false"
        class="bg-white border border-gray-300 rounded-lg shadow-xl p-0 min-w-80"
    >
        <div class="max-h-80 overflow-y-auto">
            <template x-for="(option, index) in currentOptions" :key="index">
                <button 
                    @click="selectOption(option)"
                    :class="`block w-full text-left p-4 hover:bg-blue-50 transition-colors text-sm border-b border-gray-100 last:border-b-0 ${index === 0 ? 'rounded-t-lg' : ''} ${index === currentOptions.length - 1 ? 'rounded-b-lg' : ''}`"
                    x-text="option"
                ></button>
            </template>
        </div>
    </div>
</div>

<script is:inline>
    // Make bioBuilder function available globally for Alpine.js
    function bioBuilder() {
        return {
            // Photo carousel data
            currentSlide: 0,
            photos: [
                { src: '/img/olifrost.jpg', filename: 'oli-frost-headshot.jpg', alt: 'Oli Frost - Headshot 1' },
                { src: '/img/snowball.jpg', filename: 'snowball.jpg', alt: 'Oli Frost - Full body' },
                { src: '/img/olifrost-carrot.jpg', filename: 'oli-frost-carrot.jpg', alt: 'Oli Frost - With carrot' }
            ],

            // Default bio data for initialization and reset
            defaultBioData: {
                intro: "makes songs, films and websites about the climate crisis",
                achievement1: "got Greta Thunberg dancing the macarena",
                achievement2: "created a fossil fuel funfair",
                achievement3: "made a video game about asset management",
                outlet1: "UK Parliament",
                outlet2: "Britain's Got Talent",
                outlet3: "BBC",
                outlet4: "Fox News",
                outlet5: "music festivals",
                outlet6: "art shows",
                outlet7: "on bins",
                stats1: "a frankly embarrassing amount of internet attention",
                stats2: "chronic imposter syndrome disguised as confidence",
                collaboration1: "working with Serious People, a climate campaign group he co-founded",
                collaboration2: "creating weekly videos for Greenpeace"
            },

            // Bio content data (current values)
            bioData: {},

            // Shared data arrays for easier maintenance
            _sharedAchievements: [
                "got Greta Thunberg dancing the macarena",
                "created a fossil fuel funfair",
                "made a video game about asset management",
                "sold all his personal data on eBay",
                "played the recorder for Simon Cowell",
                "took a shellphone to the UN Ocean Conference",
                "delivered a tiny violin to Shell executives",
                "played recorder on Britain's Got Talent",
                "created a viral song about socialist vampires",
                "made a wellness app for oil executives",
                "organised a climate strike for baby penguins in Antarctica",
                "created a series of viral climate strike posters",
                "made Liz Truss resign",
                "fed people owl wings",
                "tried to bribe Boris Johnson",
                "vandalised Wikipedia's page for bacon",
                "became Russia's nicest hacker",
                "put all his personal Facebook data on eBay",
                "made an algorithm that wins advertising awards",
                "got periods into parliament",
                "pretended to be a married woman on Instagram",
                "made an app that hates itself",
                "launched a crowdfunding platform for bad ideas",
                "helped the advertising industry sabotage itself",
                "turned climate action into an aerobics routine",
                "made his lamp a social media personality",
                "got his girlfriend on Getty Images",
                "started a campaign against the fire emoji"
            ],

            _sharedOutlets: [
                "UK Parliament",
                "his mother's fridge",
                "The Financial Times",
                "Vice",
                "Fox News",
                "RT News",
                "Reddit",
                "TikTok",
                "BBC",
                "Channel 4",
                "Sky News",
                "The Guardian",
                "The Observer",
                "LBC",
                "Express",
                "Telegraph",
                "Campaign",
                "PRWeek",
                "Adweek",
                "GB News",
                "The Standard",
                "City AM",
                "The Independent",
                "Fast Company",
                "Product Hunt",
                "TechCrunch",
                "Huffington Post",
                "Metro",
                "CNET",
                "Gizmodo",
                "Britain's Got Talent"
            ],

            // Shared arrays for outlet5/6/7 and collaboration1/2
            _sharedOutletLocations: [
                "music festivals",
                "his mother's fridge",
                "university lectures",
                "protest marches",
                "comedy clubs",
                "shopping centers"
            ],
            _sharedCollaborations: [
                "creating campaigns with Serious People, a climate campaign studio he co-founded",
                "developing an AI CEO replacement service",
                "operating a meditation app for oil executives",
                "turning his existential dread into a brand"
            ],

            // Bio options data
            bioOptions: {
                intro: [
                    "makes songs, films and websites about the climate crisis",
                    "is a climate satirist and online creator",
                    "is a musician, filmmaker and digital artist",
                    "is a total nobody"
                ],
                // These will be populated in init() to reference shared arrays properly
                achievement1: [],
                achievement2: [],
                achievement3: [],
                outlet1: [],
                outlet2: [],
                outlet3: [],
                outlet4: [],
                outlet5: [],
                outlet6: [],
                outlet7: [],
                stats1: [
                    "330,000 followers and over 75 million views",
                    "5.5 million streams on Spotify",
                    "the accolade of best climate song, in a climate song competition",
                    "the chance to host a climate quiz on Sky News",
                    "more podcast appearances than he'd like",
                    "mild internet fame that his parents still don't understand",
                    "a worrying dependency on the validation of strangers",

                ],
                stats2: [
                    "a complex psychological relationship with numbers",
                    "masked much of his childhood trauma",
                    "a persistent fear that he's peaked already",
                    "chronic imposter syndrome disguised as confidence",
                    "an alarming talent for getting banned from industry events",
                ],
                collaboration1: [
                    "creating campaigns with Serious People, a climate campaign studio he co-founded",
                    "developing an AI CEO replacement service",
                    "operating a meditation app for oil executives",
                    "turning his existential dread into a brand",
                ],
                collaboration2: [
                    "creating campaigns with Serious People, a climate campaign studio he co-founded",
                    "developing an AI CEO replacement service",
                    "operating a meditation app for oil executives",
                    "turning his existential dread into a brand",
                ]
            },

            // Options panel state
            showOptionsPanel: false,
            currentOptions: [],
            currentVariableType: '',
            currentElement: null,
            panelPosition: { x: 0, y: 0 },

            // Copy button state
            copyButtonText: 'Copy Bio',
            copyButtonClass: 'bg-white border border-gray-300 text-gray-700 hover:bg-gray-50',

            // Methods
            init() {
                // Assign shared arrays to bio options after component initialization
                this.bioOptions.achievement1 = this._sharedAchievements;
                this.bioOptions.achievement2 = this._sharedAchievements;
                this.bioOptions.achievement3 = this._sharedAchievements;
                this.bioOptions.outlet1 = this._sharedOutlets;
                this.bioOptions.outlet2 = this._sharedOutlets;
                this.bioOptions.outlet3 = this._sharedOutlets;
                this.bioOptions.outlet4 = this._sharedOutlets;
                this.bioOptions.outlet5 = this._sharedOutletLocations;
                this.bioOptions.outlet6 = this._sharedOutletLocations;
                this.bioOptions.outlet7 = this._sharedOutletLocations;
                this.bioOptions.collaboration1 = this._sharedCollaborations;
                this.bioOptions.collaboration2 = this._sharedCollaborations;
                // Set bioData to default values
                this.bioData = { ...this.defaultBioData };
            },

            setSlide(index) {
                this.currentSlide = index;
            },

            showOptions(type, event) {
                event.stopPropagation();
                this.currentVariableType = type;
                // Determine which fields share the same array
                let sharedFields = [];
                if (["achievement1", "achievement2", "achievement3"].includes(type)) {
                    sharedFields = ["achievement1", "achievement2", "achievement3"];
                } else if (["outlet1", "outlet2", "outlet3", "outlet4"].includes(type)) {
                    sharedFields = ["outlet1", "outlet2", "outlet3", "outlet4"];
                } else if (["outlet5", "outlet6", "outlet7"].includes(type)) {
                    sharedFields = ["outlet5", "outlet6", "outlet7"];
                } else if (["collaboration1", "collaboration2"].includes(type)) {
                    sharedFields = ["collaboration1", "collaboration2"];
                }
                // Get all selected values in the shared group except the current field
                let usedValues = sharedFields.length > 0
                    ? sharedFields.filter(f => f !== type).map(f => this.bioData[f])
                    : [];
                // Filter options to exclude used values
                let options = (this.bioOptions[type] || []).filter(opt => !usedValues.includes(opt));
                this.currentOptions = options;
                this.currentElement = event.target;
                // Calculate position
                const rect = event.target.getBoundingClientRect();
                const viewportWidth = window.innerWidth;
                const viewportHeight = window.innerHeight;
                const panelWidth = 320; // min-w-80
                const panelHeight = Math.min(320, 48 * options.length); // estimate height by option count
                let left = rect.left;
                let top = rect.bottom + 8;
                // Prefer below, but if not enough space, show above
                if (top + panelHeight > viewportHeight - 20) {
                    if (rect.top - 8 - panelHeight > 20) {
                        top = rect.top - panelHeight - 8;
                    } else {
                        // If not enough space above or below, clamp to fit
                        top = Math.max(20, viewportHeight - panelHeight - 20);
                    }
                }
                if (left + panelWidth > viewportWidth - 20) {
                    left = viewportWidth - panelWidth - 20;
                }
                this.panelPosition = {
                    x: Math.max(20, left),
                    y: Math.max(20, top)
                };
                setTimeout(() => {
                    this.showOptionsPanel = true;
                }, 10);
            },

            selectOption(option) {
                if (this.currentVariableType && this.bioData.hasOwnProperty(this.currentVariableType)) {
                    this.bioData[this.currentVariableType] = option;
                }
                this.showOptionsPanel = false;
            },

            async copyBio() {
                // Get bio text from bioData
                const bioText = `Oli Frost ${this.bioData.intro}. He ${this.bioData.achievement1}, ${this.bioData.achievement2}, and ${this.bioData.achievement3}.

His work has been featured everywhere from ${this.bioData.outlet1} to ${this.bioData.outlet2}, ${this.bioData.outlet3} to ${this.bioData.outlet4}, in ${this.bioData.outlet5}, ${this.bioData.outlet6}, and ${this.bioData.outlet7}.

It's given him ${this.bioData.stats1}, and ${this.bioData.stats2}.

At the moment he is ${this.bioData.collaboration1}, and ${this.bioData.collaboration2}.`;
                
                const originalText = this.copyButtonText;
                const originalClass = this.copyButtonClass;
                
                try {
                    // Try to use the clipboard API
                    await navigator.clipboard.writeText(bioText);
                    
                    this.copyButtonText = 'Copied!';
                    this.copyButtonClass = 'bg-green-50 border border-green-300 text-green-700';
                    
                    setTimeout(() => {
                        this.copyButtonText = originalText;
                        this.copyButtonClass = originalClass;
                    }, 2000);
                    
                } catch (err) {
                    // Fallback for browsers that don't support clipboard API
                    try {
                        // Create a temporary textarea to select the text
                        const textArea = document.createElement('textarea');
                        textArea.value = bioText;
                        textArea.style.position = 'fixed';
                        textArea.style.left = '-999999px';
                        textArea.style.top = '-999999px';
                        document.body.appendChild(textArea);
                        textArea.focus();
                        textArea.select();
                        
                        const successful = document.execCommand('copy');
                        document.body.removeChild(textArea);
                        
                        if (successful) {
                            this.copyButtonText = 'Copied!';
                            this.copyButtonClass = 'bg-green-50 border border-green-300 text-green-700';
                        } else {
                            this.copyButtonText = 'Copy failed - select text manually';
                            this.copyButtonClass = 'bg-red-50 border border-red-300 text-red-700';
                        }
                        
                        setTimeout(() => {
                            this.copyButtonText = originalText;
                            this.copyButtonClass = originalClass;
                        }, 3000);
                        
                    } catch (fallbackErr) {
                        this.copyButtonText = 'Select text to copy manually';
                        this.copyButtonClass = 'bg-blue-50 border border-blue-300 text-blue-700';
                        
                        setTimeout(() => {
                            this.copyButtonText = originalText;
                            this.copyButtonClass = originalClass;
                        }, 3000);
                    }
                }
            },

            resetBio() {
                // Reset to default values
                this.bioData = { ...this.defaultBioData };
                this.showOptionsPanel = false;
                this.currentSlide = 0;
            }
        }
    }
</script>

<style>
    /* Bio variable styling */
    .bio-variable {
        background-color: rgb(219 234 254); /* bg-blue-100 */
        color: rgb(37 99 235); /* text-blue-600 */
        padding: 2px 6px;
        border-radius: 4px;
        cursor: pointer;
        transition: all 0.2s ease;
        font-weight: 500;
        border: 1px solid rgb(191 219 254); /* border-blue-200 */
    }
    
    .bio-variable:hover {
        background-color: rgb(191 219 254); /* bg-blue-200 */
        color: rgb(29 78 216); /* text-blue-700 */
        border-color: rgb(147 197 253); /* border-blue-300 */
        transform: translateY(-1px);
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }
    
    .prose p {
        margin-bottom: 0;
    }
    
    /* Carousel dot hover effects */
    .carousel-dot.bg-blue-600:hover {
        background-color: rgb(29 78 216); /* bg-blue-700 */
    }
    
    .carousel-dot.bg-gray-300:hover {
        background-color: rgb(156 163 175); /* bg-gray-400 */
    }
</style>
