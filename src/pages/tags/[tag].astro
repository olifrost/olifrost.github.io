---
import BlogLayout from '../../layouts/BlogLayout.astro';
import { getCollection } from 'astro:content';
import ProjectSummary from '../../components/ProjectSummary.astro';
import { SITE_TITLE } from '../../consts';

export async function getStaticPaths() {
  const allProjects = await getCollection('blog');
  
  // Extract all tags from all projects
  const uniqueTags = [...new Set(
    allProjects.flatMap(project => project.data.tags || [])
  )];
  
  // Create a path for each tag
  return uniqueTags.map(tag => ({
    params: { tag },
    props: { 
      tag,
      projects: allProjects.filter(project => 
        project.data.tags?.includes(tag)
      ).sort((a, b) => new Date(b.data.date || '').getTime() - new Date(a.data.date || '').getTime())
    }
  }));
}

const { tag, projects } = Astro.props;

// Format the tag for display (capitalize, replace hyphens with spaces, etc.)
const formattedTag = tag
  .split('-')
  .map(word => word.charAt(0).toUpperCase() + word.slice(1))
  .join(' ');
---

<BlogLayout 
  title={`${formattedTag} - ${SITE_TITLE}`} 
  description={`Browse all ${formattedTag.toLowerCase()} projects by Oli Frost`}
  activeTag={tag}
>
  <!-- Project grid with all projects loaded but lazy images -->
  <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
    {projects.map((project, index) => (
      <div class="project-item opacity-0" style={`--index: ${index};`}>
        <ProjectSummary project={project} />
      </div>
    ))}
  </div>
</BlogLayout>

<style>
  /* Animation styles moved to BlogLayout to ensure consistency */
</style>