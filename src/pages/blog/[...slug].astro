---
import {
  type CollectionEntry,
  getCollection,
  getEntry,
  render,
} from "astro:content";
import Project from "../../layouts/project.astro";
import Layout from "../../layouts/Layout.astro";

export async function getStaticPaths() {
  const posts = await getCollection("blog");
  return posts.map((post) => {
    // Remove .mdx extension if present for clean URLs
    const slug = post.id.replace(/\.mdx?$/, "");

    return {
      params: { slug }, // For catch-all route, use string not array
      props: {
        entry: post, // Pass the full post entry
      },
    };
  });
}

// Get the props
const { entry } = Astro.props;

// Handle case where post isn't found
if (!entry) {
  throw new Error(`Project not found: ${Astro.params.slug}`);
}

// Use the new render() function
const { Content, headings } = await render(entry);

// Use projectType from frontmatter if specified, otherwise default to 'default'
const projectType = entry.data.projectType || "default";
---

{
  projectType === "standalone" ? (
    <Content />
  ) : projectType === "product" ? (
    <Layout title={entry.data.title} description={entry.data.description}>
      <Content />
    </Layout>
  ) : (
    <Project {...entry.data}>
      <Content />
    </Project>
  )
}
