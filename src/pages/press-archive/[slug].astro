---
import {
    type CollectionEntry,
    getCollection,
    getEntry,
    render,
} from "astro:content";
import SimplePage from "../../layouts/SimplePage.astro";

export async function getStaticPaths() {
    const pressEntries = await getCollection("press");
    return pressEntries.map((entry) => ({
        params: { slug: entry.id.replace(/\.md$/, "") },
        props: { id: entry.id },
    }));
}

// Get the full entry
const { id } = Astro.props;
const entry = await getEntry("press", id);

// Handle case where entry isn't found
if (!entry) {
    throw new Error(`Press article not found: ${id}`);
}

// Render the content
const { Content } = await render(entry);

// Parse the created date
let parsedDate = new Date();
if (entry.data.created) {
    const dateMatch = entry.data.created.match(
        /(\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2})/,
    );
    parsedDate = dateMatch ? new Date(dateMatch[1]) : new Date();
}

// Extract title from content
const titleLine = entry.body
    ?.split("\n")
    .find((line: string) => line.startsWith("# "));
const title = titleLine
    ? titleLine.replace("# ", "")
    : (id as string).replace(/\.md$/, "");
---

<SimplePage>
    <article class="prose prose-lg prose-blue mx-auto">
        <header class="mb-8">
            <h1 class="text-3xl font-bold leading-tight mb-2">{title}</h1>
            <div
                class="text-base text-gray-600 flex flex-wrap gap-2 items-center"
            >
                {
                    entry.data.source && (
                        <a
                            href={entry.data.source}
                            target="_blank"
                            rel="noopener noreferrer"
                            class="text-blue-700 hover:text-blue-900 underline font-medium"
                        >
                            View original source
                        </a>
                    )
                }
                {entry.data.source && <span class="text-gray-400">•</span>}
                <span>
                    {
                        parsedDate.toLocaleDateString("en-US", {
                            year: "numeric",
                            month: "long",
                            day: "numeric",
                        })
                    }
                </span>
                {
                    entry.data.author && entry.data.author.trim() && (
                        <>
                            <span class="text-gray-400">•</span>
                            <span>by {entry.data.author}</span>
                        </>
                    )
                }
            </div>
        </header>
        <div class="press-content">
            <Content />
        </div>
    </article>
    <style>
        /* Hide the first h1 in the markdown content */
        .press-content :global(h1:first-of-type) {
            display: none;
        }
    </style>
    <div class="mt-8">
        <a
            href="/press-archive"
            class="text-blue-700 hover:text-blue-900 underline"
        >
            ← Back to press archive
        </a>
    </div>
</SimplePage>
